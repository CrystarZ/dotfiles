return {
  { import = "lazyvim.plugins.extras.dap.core" },
  {
    "mfussenegger/nvim-dap",keys = {
      { "<leader>dB", function() require("dap").set_breakpoint(vim.fn.input('Breakpoint condition: ')) end, desc = "Breakpoint Condition" },
      { "<leader>db", function() require("dap").toggle_breakpoint() end, desc = "Toggle Breakpoint" },
      { "<leader>dc", function() require("dap").continue() end, desc = "Run/Continue" },
      { "<leader>da", function() require("dap").continue({ before = get_args }) end, desc = "Run with Args" },
      { "<leader>dC", function() require("dap").run_to_cursor() end, desc = "Run to Cursor" },
      { "<leader>dg", function() require("dap").goto_() end, desc = "Go to Line (No Execute)" },
      { "<leader>di", function() require("dap").step_into() end, desc = "Step Into" },
      { "<leader>dj", function() require("dap").down() end, desc = "Down" },
      { "<leader>dk", function() require("dap").up() end, desc = "Up" },
      { "<leader>dl", function() require("dap").run_last() end, desc = "Run Last" },
      { "<leader>do", function() require("dap").step_out() end, desc = "Step Out" },
      { "<leader>dO", function() require("dap").step_over() end, desc = "Step Over" },
      { "<leader>dP", function() require("dap").pause() end, desc = "Pause" },
      { "<leader>dr", function() require("dap").repl.toggle() end, desc = "Toggle REPL" },
      { "<leader>ds", function() require("dap").session() end, desc = "Session" },
      { "<leader>dt", function() require("dap").terminate() end, desc = "Terminate" },
      { "<leader>dw", function() require("dap.ui.widgets").hover() end, desc = "Widgets" },
      { "<leader>dR", function() require("dap").terminate() require("dap").run_last() end, desc = "Restart" },

      --vscode like
      -- { "<f5>", function() require("dap").continue() end, desc = "Run/Continue" },
      -- { "<f10>", function() require("dap").step_over() end, desc = "Step Over" },
      -- { "<f11>", function() require("dap").step_into() end, desc = "Step Into" },
      -- { "<s-f11>", function() require("dap").step_out() end, desc = "Step Out" },
      -- { "<s-f5>", function() require("dap").terminate() end, desc = "Terminate" },
      -- { "<f9>", function() require("dap").toggle_breakpoint() end, desc = "Toggle Breakpoint" },
      -- { "<c-f9>", function() require("dap").set_breakpoint(vim.fn.input('Breakpoint condition: ')) end, desc = "Breakpoint Condition" },
      -- { "<sc-y>", function() require("dap").repl.toggle() end, desc = "Toggle REPL" },
      -- { "<c-f5>", function() require("dap").run_last() end, desc = "Run Last" },
      -- { "<sc-f5>", function() require("dap").terminate() require("dap").run_last() end, desc = "Restart" },

      --human like(vimspector human mode)
      { "<f5>", function() require("dap").continue() end, desc = "Run/Continue" },
      { "<f3>", function() require("dap").terminate() end, desc = "Terminate" },
      { "<f4>", function() require("dap").terminate() require("dap").run_last() end, desc = "Restart" },
      { "<f6>", function() require("dap").pause() end, desc = "Pause" },
      { "<f9>", function() require("dap").toggle_breakpoint() end, desc = "Toggle Breakpoint" },
      { "<leader><f9>", function() require("dap").set_breakpoint(vim.fn.input('Breakpoint condition: ')) end, desc = "Breakpoint Condition" },
      { "<leader><f8>", function() require("dap").run_to_cursor() end, desc = "Run to Cursor" },
      { "<f10>", function() require("dap").step_over() end, desc = "Step Over" },
      { "<f11>", function() require("dap").step_into() end, desc = "Step Into" },
      { "<f12>", function() require("dap").step_out() end, desc = "Step Out" },
      { "<f1>", function() require("dap").repl.toggle() end, desc = "Toggle REPL" },
    },
  },
}
